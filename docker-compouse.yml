version: "3.3"

services:
  db:
    container_name: "postgres-cr"
    restart: "always"
    build:
      context: ./
      dockerfile: postgres/postgres.Dockerfile
    volumes:
      - ./postgres/postgres.conf:/etc/postgresql/postgresql.conf
      - ./${VOLUMES}/postgres/postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "5432:5432"

  redis:
    image: 'redis:alpine'
    command: redis-server --requirepass jjsja7123jdasdkk21238882jjejq
    restart: always
    expose:
      - 6379
    ports:
      - "6377:6379"
    hostname: redis
    volumes:
      - ./${VOLUMES}/redis/redis_data:/var/lib/redis/data

  backend:
    container_name: "api-cr"
    restart: "always"
    build:
      context: ./
      dockerfile: api/api.Dockerfile
    expose:
      - "5007"
    ports:
      - "5007:5007"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  crawler:
    container_name: "crawler-cr"
    build:
      context: ./
      dockerfile: crawler/crawler.Dockerfile
    command: bash -c "ls && envsubst < env.scrapy.cfg > scrapy.cfg && scrapyd"
    volumes:
      - ./${VOLUMES}/crawler:/var/crawler
    ports:
      - "6801:6801"
    tty: true
    stdin_open: true
    dns:
      - 8.8.8.8
    env_file:
      - .env
    depends_on:
      - db
      - redis

  nginx:
    restart: "always"
    build:
      context: .
      dockerfile: nginx/nginx.Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./nginx/dev:/etc/nginx/conf.d
    depends_on:
      - backend

  tasks:
    container_name: "tasks-cr"
    restart: "always"
    command: bash -c "celery -A tasks beat --detach && celery -A tasks worker"
    build:
      context: ./
      dockerfile: tasks/tasks.Dockerfile
    volumes:
      - ./${VOLUMES}/tasks/data:/var/tasks
    env_file:
      - .env
